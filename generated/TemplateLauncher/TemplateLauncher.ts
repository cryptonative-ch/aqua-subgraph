// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AllowPublicTemplatesUpdated extends ethereum.Event {
  get params(): AllowPublicTemplatesUpdated__Params {
    return new AllowPublicTemplatesUpdated__Params(this);
  }
}

export class AllowPublicTemplatesUpdated__Params {
  _event: AllowPublicTemplatesUpdated;

  constructor(event: AllowPublicTemplatesUpdated) {
    this._event = event;
  }

  get allowPublicTemplates(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class TemplateAdded extends ethereum.Event {
  get params(): TemplateAdded__Params {
    return new TemplateAdded__Params(this);
  }
}

export class TemplateAdded__Params {
  _event: TemplateAdded;

  constructor(event: TemplateAdded) {
    this._event = event;
  }

  get template(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get templateId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TemplateLaunched extends ethereum.Event {
  get params(): TemplateLaunched__Params {
    return new TemplateLaunched__Params(this);
  }
}

export class TemplateLaunched__Params {
  _event: TemplateLaunched;

  constructor(event: TemplateLaunched) {
    this._event = event;
  }

  get template(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get templateId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get templateDeployer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get metadataContentHash(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class TemplateMetadataContentHashUpdated extends ethereum.Event {
  get params(): TemplateMetadataContentHashUpdated__Params {
    return new TemplateMetadataContentHashUpdated__Params(this);
  }
}

export class TemplateMetadataContentHashUpdated__Params {
  _event: TemplateMetadataContentHashUpdated;

  constructor(event: TemplateMetadataContentHashUpdated) {
    this._event = event;
  }

  get template(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newdetaDataContentHash(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class TemplateRemoved extends ethereum.Event {
  get params(): TemplateRemoved__Params {
    return new TemplateRemoved__Params(this);
  }
}

export class TemplateRemoved__Params {
  _event: TemplateRemoved;

  constructor(event: TemplateRemoved) {
    this._event = event;
  }

  get template(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get templateId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TemplateVerified extends ethereum.Event {
  get params(): TemplateVerified__Params {
    return new TemplateVerified__Params(this);
  }
}

export class TemplateVerified__Params {
  _event: TemplateVerified;

  constructor(event: TemplateVerified) {
    this._event = event;
  }

  get template(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get templateId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TemplateLauncher__launchedTemplateResult {
  value0: Address;
  value1: string;

  constructor(value0: Address, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }
}

export class TemplateLauncher extends ethereum.SmartContract {
  static bind(address: Address): TemplateLauncher {
    return new TemplateLauncher("TemplateLauncher", address);
  }

  allowPublicTemplates(): boolean {
    let result = super.call(
      "allowPublicTemplates",
      "allowPublicTemplates():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_allowPublicTemplates(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "allowPublicTemplates",
      "allowPublicTemplates():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  factory(): Address {
    let result = super.call("factory", "factory():(address)", []);

    return result[0].toAddress();
  }

  try_factory(): ethereum.CallResult<Address> {
    let result = super.tryCall("factory", "factory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTemplate(_templateId: BigInt): Address {
    let result = super.call("getTemplate", "getTemplate(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_templateId)
    ]);

    return result[0].toAddress();
  }

  try_getTemplate(_templateId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getTemplate",
      "getTemplate(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_templateId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTemplateId(_template: Address): BigInt {
    let result = super.call(
      "getTemplateId",
      "getTemplateId(address):(uint256)",
      [ethereum.Value.fromAddress(_template)]
    );

    return result[0].toBigInt();
  }

  try_getTemplateId(_template: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTemplateId",
      "getTemplateId(address):(uint256)",
      [ethereum.Value.fromAddress(_template)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  launchedTemplate(param0: Address): TemplateLauncher__launchedTemplateResult {
    let result = super.call(
      "launchedTemplate",
      "launchedTemplate(address):(address,string)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new TemplateLauncher__launchedTemplateResult(
      result[0].toAddress(),
      result[1].toString()
    );
  }

  try_launchedTemplate(
    param0: Address
  ): ethereum.CallResult<TemplateLauncher__launchedTemplateResult> {
    let result = super.tryCall(
      "launchedTemplate",
      "launchedTemplate(address):(address,string)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TemplateLauncher__launchedTemplateResult(
        value[0].toAddress(),
        value[1].toString()
      )
    );
  }

  participantListLaucher(): Address {
    let result = super.call(
      "participantListLaucher",
      "participantListLaucher():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_participantListLaucher(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "participantListLaucher",
      "participantListLaucher():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  templateVerified(param0: Address): boolean {
    let result = super.call(
      "templateVerified",
      "templateVerified(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_templateVerified(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "templateVerified",
      "templateVerified(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _factory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _participantListLaucher(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddTemplateCall extends ethereum.Call {
  get inputs(): AddTemplateCall__Inputs {
    return new AddTemplateCall__Inputs(this);
  }

  get outputs(): AddTemplateCall__Outputs {
    return new AddTemplateCall__Outputs(this);
  }
}

export class AddTemplateCall__Inputs {
  _call: AddTemplateCall;

  constructor(call: AddTemplateCall) {
    this._call = call;
  }

  get _template(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddTemplateCall__Outputs {
  _call: AddTemplateCall;

  constructor(call: AddTemplateCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class LaunchTemplateCall extends ethereum.Call {
  get inputs(): LaunchTemplateCall__Inputs {
    return new LaunchTemplateCall__Inputs(this);
  }

  get outputs(): LaunchTemplateCall__Outputs {
    return new LaunchTemplateCall__Outputs(this);
  }
}

export class LaunchTemplateCall__Inputs {
  _call: LaunchTemplateCall;

  constructor(call: LaunchTemplateCall) {
    this._call = call;
  }

  get _templateId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _metadataContentHash(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _templateDeployer(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class LaunchTemplateCall__Outputs {
  _call: LaunchTemplateCall;

  constructor(call: LaunchTemplateCall) {
    this._call = call;
  }

  get newTemplate(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class RemoveTemplateCall extends ethereum.Call {
  get inputs(): RemoveTemplateCall__Inputs {
    return new RemoveTemplateCall__Inputs(this);
  }

  get outputs(): RemoveTemplateCall__Outputs {
    return new RemoveTemplateCall__Outputs(this);
  }
}

export class RemoveTemplateCall__Inputs {
  _call: RemoveTemplateCall;

  constructor(call: RemoveTemplateCall) {
    this._call = call;
  }

  get _templateId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveTemplateCall__Outputs {
  _call: RemoveTemplateCall;

  constructor(call: RemoveTemplateCall) {
    this._call = call;
  }
}

export class ToggleAllowPublicTemplatesCall extends ethereum.Call {
  get inputs(): ToggleAllowPublicTemplatesCall__Inputs {
    return new ToggleAllowPublicTemplatesCall__Inputs(this);
  }

  get outputs(): ToggleAllowPublicTemplatesCall__Outputs {
    return new ToggleAllowPublicTemplatesCall__Outputs(this);
  }
}

export class ToggleAllowPublicTemplatesCall__Inputs {
  _call: ToggleAllowPublicTemplatesCall;

  constructor(call: ToggleAllowPublicTemplatesCall) {
    this._call = call;
  }
}

export class ToggleAllowPublicTemplatesCall__Outputs {
  _call: ToggleAllowPublicTemplatesCall;

  constructor(call: ToggleAllowPublicTemplatesCall) {
    this._call = call;
  }
}

export class UpdateTemplateMetadataContentHashCall extends ethereum.Call {
  get inputs(): UpdateTemplateMetadataContentHashCall__Inputs {
    return new UpdateTemplateMetadataContentHashCall__Inputs(this);
  }

  get outputs(): UpdateTemplateMetadataContentHashCall__Outputs {
    return new UpdateTemplateMetadataContentHashCall__Outputs(this);
  }
}

export class UpdateTemplateMetadataContentHashCall__Inputs {
  _call: UpdateTemplateMetadataContentHashCall;

  constructor(call: UpdateTemplateMetadataContentHashCall) {
    this._call = call;
  }

  get _template(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newMetadataContentHash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateTemplateMetadataContentHashCall__Outputs {
  _call: UpdateTemplateMetadataContentHashCall;

  constructor(call: UpdateTemplateMetadataContentHashCall) {
    this._call = call;
  }
}

export class VerifyTemplateCall extends ethereum.Call {
  get inputs(): VerifyTemplateCall__Inputs {
    return new VerifyTemplateCall__Inputs(this);
  }

  get outputs(): VerifyTemplateCall__Outputs {
    return new VerifyTemplateCall__Outputs(this);
  }
}

export class VerifyTemplateCall__Inputs {
  _call: VerifyTemplateCall;

  constructor(call: VerifyTemplateCall) {
    this._call = call;
  }

  get _templateId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class VerifyTemplateCall__Outputs {
  _call: VerifyTemplateCall;

  constructor(call: VerifyTemplateCall) {
    this._call = call;
  }
}
