// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FactoryInitialized extends ethereum.Event {
  get params(): FactoryInitialized__Params {
    return new FactoryInitialized__Params(this);
  }
}

export class FactoryInitialized__Params {
  _event: FactoryInitialized;

  constructor(event: FactoryInitialized) {
    this._event = event;
  }

  get feeManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get feeTo(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get templateManager(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get templateFee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get feeNumerator(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get saleFee(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class FeeManagerUpdated extends ethereum.Event {
  get params(): FeeManagerUpdated__Params {
    return new FeeManagerUpdated__Params(this);
  }
}

export class FeeManagerUpdated__Params {
  _event: FeeManagerUpdated;

  constructor(event: FeeManagerUpdated) {
    this._event = event;
  }

  get feeManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FeeNumeratorUpdated extends ethereum.Event {
  get params(): FeeNumeratorUpdated__Params {
    return new FeeNumeratorUpdated__Params(this);
  }
}

export class FeeNumeratorUpdated__Params {
  _event: FeeNumeratorUpdated;

  constructor(event: FeeNumeratorUpdated) {
    this._event = event;
  }

  get feeNumerator(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class FeeToUpdated extends ethereum.Event {
  get params(): FeeToUpdated__Params {
    return new FeeToUpdated__Params(this);
  }
}

export class FeeToUpdated__Params {
  _event: FeeToUpdated;

  constructor(event: FeeToUpdated) {
    this._event = event;
  }

  get feeTo(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SaleFeeUpdated extends ethereum.Event {
  get params(): SaleFeeUpdated__Params {
    return new SaleFeeUpdated__Params(this);
  }
}

export class SaleFeeUpdated__Params {
  _event: SaleFeeUpdated;

  constructor(event: SaleFeeUpdated) {
    this._event = event;
  }

  get saleFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class TemplateFeeUpdated extends ethereum.Event {
  get params(): TemplateFeeUpdated__Params {
    return new TemplateFeeUpdated__Params(this);
  }
}

export class TemplateFeeUpdated__Params {
  _event: TemplateFeeUpdated;

  constructor(event: TemplateFeeUpdated) {
    this._event = event;
  }

  get templateFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class TemplateLaunched extends ethereum.Event {
  get params(): TemplateLaunched__Params {
    return new TemplateLaunched__Params(this);
  }
}

export class TemplateLaunched__Params {
  _event: TemplateLaunched;

  constructor(event: TemplateLaunched) {
    this._event = event;
  }

  get template(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get templateId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TemplateLauncherUpdated extends ethereum.Event {
  get params(): TemplateLauncherUpdated__Params {
    return new TemplateLauncherUpdated__Params(this);
  }
}

export class TemplateLauncherUpdated__Params {
  _event: TemplateLauncherUpdated;

  constructor(event: TemplateLauncherUpdated) {
    this._event = event;
  }

  get templateLauncher(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TemplateManagerUpdated extends ethereum.Event {
  get params(): TemplateManagerUpdated__Params {
    return new TemplateManagerUpdated__Params(this);
  }
}

export class TemplateManagerUpdated__Params {
  _event: TemplateManagerUpdated;

  constructor(event: TemplateManagerUpdated) {
    this._event = event;
  }

  get templateManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MesaFactory extends ethereum.SmartContract {
  static bind(address: Address): MesaFactory {
    return new MesaFactory("MesaFactory", address);
  }

  allTemplates(param0: BigInt): Address {
    let result = super.call("allTemplates", "allTemplates(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_allTemplates(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "allTemplates",
      "allTemplates(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeDenominator(): BigInt {
    let result = super.call("feeDenominator", "feeDenominator():(uint256)", []);

    return result[0].toBigInt();
  }

  try_feeDenominator(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "feeDenominator",
      "feeDenominator():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeManager(): Address {
    let result = super.call("feeManager", "feeManager():(address)", []);

    return result[0].toAddress();
  }

  try_feeManager(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeManager", "feeManager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeNumerator(): BigInt {
    let result = super.call("feeNumerator", "feeNumerator():(uint256)", []);

    return result[0].toBigInt();
  }

  try_feeNumerator(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("feeNumerator", "feeNumerator():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeTo(): Address {
    let result = super.call("feeTo", "feeTo():(address)", []);

    return result[0].toAddress();
  }

  try_feeTo(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeTo", "feeTo():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  initialized(): boolean {
    let result = super.call("initialized", "initialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_initialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("initialized", "initialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  numberOfTemplates(): BigInt {
    let result = super.call(
      "numberOfTemplates",
      "numberOfTemplates():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numberOfTemplates(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numberOfTemplates",
      "numberOfTemplates():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  saleFee(): BigInt {
    let result = super.call("saleFee", "saleFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_saleFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("saleFee", "saleFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  templateFee(): BigInt {
    let result = super.call("templateFee", "templateFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_templateFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("templateFee", "templateFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  templateId(): BigInt {
    let result = super.call("templateId", "templateId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_templateId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("templateId", "templateId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  templateLauncher(): Address {
    let result = super.call(
      "templateLauncher",
      "templateLauncher():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_templateLauncher(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "templateLauncher",
      "templateLauncher():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  templateManager(): Address {
    let result = super.call(
      "templateManager",
      "templateManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_templateManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "templateManager",
      "templateManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _feeManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _feeTo(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _templateManager(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _templateFee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _feeNumerator(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _saleFee(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class LaunchTemplateCall extends ethereum.Call {
  get inputs(): LaunchTemplateCall__Inputs {
    return new LaunchTemplateCall__Inputs(this);
  }

  get outputs(): LaunchTemplateCall__Outputs {
    return new LaunchTemplateCall__Outputs(this);
  }
}

export class LaunchTemplateCall__Inputs {
  _call: LaunchTemplateCall;

  constructor(call: LaunchTemplateCall) {
    this._call = call;
  }

  get _templateId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _metaData(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class LaunchTemplateCall__Outputs {
  _call: LaunchTemplateCall;

  constructor(call: LaunchTemplateCall) {
    this._call = call;
  }

  get newTemplate(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class SetFeeManagerCall extends ethereum.Call {
  get inputs(): SetFeeManagerCall__Inputs {
    return new SetFeeManagerCall__Inputs(this);
  }

  get outputs(): SetFeeManagerCall__Outputs {
    return new SetFeeManagerCall__Outputs(this);
  }
}

export class SetFeeManagerCall__Inputs {
  _call: SetFeeManagerCall;

  constructor(call: SetFeeManagerCall) {
    this._call = call;
  }

  get _feeManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeManagerCall__Outputs {
  _call: SetFeeManagerCall;

  constructor(call: SetFeeManagerCall) {
    this._call = call;
  }
}

export class SetFeeNumeratorCall extends ethereum.Call {
  get inputs(): SetFeeNumeratorCall__Inputs {
    return new SetFeeNumeratorCall__Inputs(this);
  }

  get outputs(): SetFeeNumeratorCall__Outputs {
    return new SetFeeNumeratorCall__Outputs(this);
  }
}

export class SetFeeNumeratorCall__Inputs {
  _call: SetFeeNumeratorCall;

  constructor(call: SetFeeNumeratorCall) {
    this._call = call;
  }

  get _feeNumerator(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFeeNumeratorCall__Outputs {
  _call: SetFeeNumeratorCall;

  constructor(call: SetFeeNumeratorCall) {
    this._call = call;
  }
}

export class SetFeeToCall extends ethereum.Call {
  get inputs(): SetFeeToCall__Inputs {
    return new SetFeeToCall__Inputs(this);
  }

  get outputs(): SetFeeToCall__Outputs {
    return new SetFeeToCall__Outputs(this);
  }
}

export class SetFeeToCall__Inputs {
  _call: SetFeeToCall;

  constructor(call: SetFeeToCall) {
    this._call = call;
  }

  get _feeTo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeToCall__Outputs {
  _call: SetFeeToCall;

  constructor(call: SetFeeToCall) {
    this._call = call;
  }
}

export class SetSaleFeeCall extends ethereum.Call {
  get inputs(): SetSaleFeeCall__Inputs {
    return new SetSaleFeeCall__Inputs(this);
  }

  get outputs(): SetSaleFeeCall__Outputs {
    return new SetSaleFeeCall__Outputs(this);
  }
}

export class SetSaleFeeCall__Inputs {
  _call: SetSaleFeeCall;

  constructor(call: SetSaleFeeCall) {
    this._call = call;
  }

  get _saleFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSaleFeeCall__Outputs {
  _call: SetSaleFeeCall;

  constructor(call: SetSaleFeeCall) {
    this._call = call;
  }
}

export class SetTemplateFeeCall extends ethereum.Call {
  get inputs(): SetTemplateFeeCall__Inputs {
    return new SetTemplateFeeCall__Inputs(this);
  }

  get outputs(): SetTemplateFeeCall__Outputs {
    return new SetTemplateFeeCall__Outputs(this);
  }
}

export class SetTemplateFeeCall__Inputs {
  _call: SetTemplateFeeCall;

  constructor(call: SetTemplateFeeCall) {
    this._call = call;
  }

  get _templateFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTemplateFeeCall__Outputs {
  _call: SetTemplateFeeCall;

  constructor(call: SetTemplateFeeCall) {
    this._call = call;
  }
}

export class SetTemplateLauncherCall extends ethereum.Call {
  get inputs(): SetTemplateLauncherCall__Inputs {
    return new SetTemplateLauncherCall__Inputs(this);
  }

  get outputs(): SetTemplateLauncherCall__Outputs {
    return new SetTemplateLauncherCall__Outputs(this);
  }
}

export class SetTemplateLauncherCall__Inputs {
  _call: SetTemplateLauncherCall;

  constructor(call: SetTemplateLauncherCall) {
    this._call = call;
  }

  get _templateLauncher(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTemplateLauncherCall__Outputs {
  _call: SetTemplateLauncherCall;

  constructor(call: SetTemplateLauncherCall) {
    this._call = call;
  }
}

export class SetTemplateManagerCall extends ethereum.Call {
  get inputs(): SetTemplateManagerCall__Inputs {
    return new SetTemplateManagerCall__Inputs(this);
  }

  get outputs(): SetTemplateManagerCall__Outputs {
    return new SetTemplateManagerCall__Outputs(this);
  }
}

export class SetTemplateManagerCall__Inputs {
  _call: SetTemplateManagerCall;

  constructor(call: SetTemplateManagerCall) {
    this._call = call;
  }

  get _templateManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTemplateManagerCall__Outputs {
  _call: SetTemplateManagerCall;

  constructor(call: SetTemplateManagerCall) {
    this._call = call;
  }
}
