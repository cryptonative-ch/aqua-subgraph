// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AmountsUpdated extends ethereum.Event {
  get params(): AmountsUpdated__Params {
    return new AmountsUpdated__Params(this);
  }
}

export class AmountsUpdated__Params {
  _event: AmountsUpdated;

  constructor(event: AmountsUpdated) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amounts(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ListInitialized extends ethereum.Event {
  get params(): ListInitialized__Params {
    return new ListInitialized__Params(this);
  }
}

export class ListInitialized__Params {
  _event: ListInitialized;

  constructor(event: ListInitialized) {
    this._event = event;
  }

  get managers(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }
}

export class ParticipantList extends ethereum.SmartContract {
  static bind(address: Address): ParticipantList {
    return new ParticipantList("ParticipantList", address);
  }

  initialized(): boolean {
    let result = super.call("initialized", "initialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_initialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("initialized", "initialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isInList(account: Address): boolean {
    let result = super.call("isInList", "isInList(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_isInList(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isInList", "isInList(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  listManagers(param0: Address): boolean {
    let result = super.call("listManagers", "listManagers(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_listManagers(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("listManagers", "listManagers(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  participantAmounts(param0: Address): BigInt {
    let result = super.call(
      "participantAmounts",
      "participantAmounts(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_participantAmounts(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "participantAmounts",
      "participantAmounts(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class InitCall extends ethereum.Call {
  get inputs(): InitCall__Inputs {
    return new InitCall__Inputs(this);
  }

  get outputs(): InitCall__Outputs {
    return new InitCall__Outputs(this);
  }
}

export class InitCall__Inputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }

  get managers(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class InitCall__Outputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class SetParticipantAmountsCall extends ethereum.Call {
  get inputs(): SetParticipantAmountsCall__Inputs {
    return new SetParticipantAmountsCall__Inputs(this);
  }

  get outputs(): SetParticipantAmountsCall__Outputs {
    return new SetParticipantAmountsCall__Outputs(this);
  }
}

export class SetParticipantAmountsCall__Inputs {
  _call: SetParticipantAmountsCall;

  constructor(call: SetParticipantAmountsCall) {
    this._call = call;
  }

  get accounts(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetParticipantAmountsCall__Outputs {
  _call: SetParticipantAmountsCall;

  constructor(call: SetParticipantAmountsCall) {
    this._call = call;
  }
}
