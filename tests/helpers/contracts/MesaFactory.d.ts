/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface MesaFactoryInterface extends ethers.utils.Interface {
  functions: {
    "allAuctions(uint256)": FunctionFragment;
    "auctionFee()": FunctionFragment;
    "feeDenominator()": FunctionFragment;
    "feeManager()": FunctionFragment;
    "feeNumerator()": FunctionFragment;
    "feeTo()": FunctionFragment;
    "initalize(address,address,address,address,uint256,uint256)": FunctionFragment;
    "launchTemplate(uint256,bytes)": FunctionFragment;
    "numberOfAuctions()": FunctionFragment;
    "setAuctionFee(uint256)": FunctionFragment;
    "setFeeManager(address)": FunctionFragment;
    "setFeeNumerator(uint256)": FunctionFragment;
    "setFeeTo(address)": FunctionFragment;
    "setTemplateLauncher(address)": FunctionFragment;
    "setTemplateManager(address)": FunctionFragment;
    "templateId()": FunctionFragment;
    "templateLauncher()": FunctionFragment;
    "templateManager()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "allAuctions",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "auctionFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "feeDenominator",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "feeManager",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "feeNumerator",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "feeTo", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "initalize",
    values: [string, string, string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "launchTemplate",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "numberOfAuctions",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setAuctionFee",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setFeeManager",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setFeeNumerator",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "setFeeTo", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setTemplateLauncher",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setTemplateManager",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "templateId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "templateLauncher",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "templateManager",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "allAuctions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "auctionFee", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "feeDenominator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "feeManager", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "feeNumerator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "feeTo", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initalize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "launchTemplate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "numberOfAuctions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAuctionFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFeeManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFeeNumerator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setFeeTo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setTemplateLauncher",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTemplateManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "templateId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "templateLauncher",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "templateManager",
    data: BytesLike
  ): Result;

  events: {
    "FactoryInitialized(address,address,address,address,uint256,uint256)": EventFragment;
    "SetAuctionFee(uint256)": EventFragment;
    "SetFeeManager(address)": EventFragment;
    "SetFeeNumerator(uint256)": EventFragment;
    "SetFeeTo(address)": EventFragment;
    "SetTemplateLauncher(address)": EventFragment;
    "SetTemplateManager(address)": EventFragment;
    "TemplateLaunched(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "FactoryInitialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetAuctionFee"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetFeeManager"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetFeeNumerator"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetFeeTo"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetTemplateLauncher"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetTemplateManager"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TemplateLaunched"): EventFragment;
}

export class MesaFactory extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: MesaFactoryInterface;

  functions: {
    allAuctions(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "allAuctions(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    auctionFee(overrides?: CallOverrides): Promise<[BigNumber]>;

    "auctionFee()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    feeDenominator(overrides?: CallOverrides): Promise<[BigNumber]>;

    "feeDenominator()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    feeManager(overrides?: CallOverrides): Promise<[string]>;

    "feeManager()"(overrides?: CallOverrides): Promise<[string]>;

    feeNumerator(overrides?: CallOverrides): Promise<[BigNumber]>;

    "feeNumerator()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    feeTo(overrides?: CallOverrides): Promise<[string]>;

    "feeTo()"(overrides?: CallOverrides): Promise<[string]>;

    initalize(
      _feeManager: string,
      _feeTo: string,
      _templateManager: string,
      _templateLauncher: string,
      _feeNumerator: BigNumberish,
      _auctionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initalize(address,address,address,address,uint256,uint256)"(
      _feeManager: string,
      _feeTo: string,
      _templateManager: string,
      _templateLauncher: string,
      _feeNumerator: BigNumberish,
      _auctionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    launchTemplate(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "launchTemplate(uint256,bytes)"(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    numberOfAuctions(overrides?: CallOverrides): Promise<[BigNumber]>;

    "numberOfAuctions()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    setAuctionFee(
      _auctionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setAuctionFee(uint256)"(
      _auctionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setFeeManager(
      _feeManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setFeeManager(address)"(
      _feeManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setFeeNumerator(
      _feeNumerator: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setFeeNumerator(uint256)"(
      _feeNumerator: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setFeeTo(
      _feeTo: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setFeeTo(address)"(
      _feeTo: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setTemplateLauncher(
      _templateLauncher: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setTemplateLauncher(address)"(
      _templateLauncher: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setTemplateManager(
      _templateManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setTemplateManager(address)"(
      _templateManager: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    templateId(overrides?: CallOverrides): Promise<[BigNumber]>;

    "templateId()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    templateLauncher(overrides?: CallOverrides): Promise<[string]>;

    "templateLauncher()"(overrides?: CallOverrides): Promise<[string]>;

    templateManager(overrides?: CallOverrides): Promise<[string]>;

    "templateManager()"(overrides?: CallOverrides): Promise<[string]>;
  };

  allAuctions(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "allAuctions(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  auctionFee(overrides?: CallOverrides): Promise<BigNumber>;

  "auctionFee()"(overrides?: CallOverrides): Promise<BigNumber>;

  feeDenominator(overrides?: CallOverrides): Promise<BigNumber>;

  "feeDenominator()"(overrides?: CallOverrides): Promise<BigNumber>;

  feeManager(overrides?: CallOverrides): Promise<string>;

  "feeManager()"(overrides?: CallOverrides): Promise<string>;

  feeNumerator(overrides?: CallOverrides): Promise<BigNumber>;

  "feeNumerator()"(overrides?: CallOverrides): Promise<BigNumber>;

  feeTo(overrides?: CallOverrides): Promise<string>;

  "feeTo()"(overrides?: CallOverrides): Promise<string>;

  initalize(
    _feeManager: string,
    _feeTo: string,
    _templateManager: string,
    _templateLauncher: string,
    _feeNumerator: BigNumberish,
    _auctionFee: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initalize(address,address,address,address,uint256,uint256)"(
    _feeManager: string,
    _feeTo: string,
    _templateManager: string,
    _templateLauncher: string,
    _feeNumerator: BigNumberish,
    _auctionFee: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  launchTemplate(
    _templateId: BigNumberish,
    _data: BytesLike,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "launchTemplate(uint256,bytes)"(
    _templateId: BigNumberish,
    _data: BytesLike,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  numberOfAuctions(overrides?: CallOverrides): Promise<BigNumber>;

  "numberOfAuctions()"(overrides?: CallOverrides): Promise<BigNumber>;

  setAuctionFee(
    _auctionFee: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setAuctionFee(uint256)"(
    _auctionFee: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setFeeManager(
    _feeManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setFeeManager(address)"(
    _feeManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setFeeNumerator(
    _feeNumerator: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setFeeNumerator(uint256)"(
    _feeNumerator: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setFeeTo(_feeTo: string, overrides?: Overrides): Promise<ContractTransaction>;

  "setFeeTo(address)"(
    _feeTo: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setTemplateLauncher(
    _templateLauncher: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setTemplateLauncher(address)"(
    _templateLauncher: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setTemplateManager(
    _templateManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setTemplateManager(address)"(
    _templateManager: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  templateId(overrides?: CallOverrides): Promise<BigNumber>;

  "templateId()"(overrides?: CallOverrides): Promise<BigNumber>;

  templateLauncher(overrides?: CallOverrides): Promise<string>;

  "templateLauncher()"(overrides?: CallOverrides): Promise<string>;

  templateManager(overrides?: CallOverrides): Promise<string>;

  "templateManager()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    allAuctions(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "allAuctions(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    auctionFee(overrides?: CallOverrides): Promise<BigNumber>;

    "auctionFee()"(overrides?: CallOverrides): Promise<BigNumber>;

    feeDenominator(overrides?: CallOverrides): Promise<BigNumber>;

    "feeDenominator()"(overrides?: CallOverrides): Promise<BigNumber>;

    feeManager(overrides?: CallOverrides): Promise<string>;

    "feeManager()"(overrides?: CallOverrides): Promise<string>;

    feeNumerator(overrides?: CallOverrides): Promise<BigNumber>;

    "feeNumerator()"(overrides?: CallOverrides): Promise<BigNumber>;

    feeTo(overrides?: CallOverrides): Promise<string>;

    "feeTo()"(overrides?: CallOverrides): Promise<string>;

    initalize(
      _feeManager: string,
      _feeTo: string,
      _templateManager: string,
      _templateLauncher: string,
      _feeNumerator: BigNumberish,
      _auctionFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initalize(address,address,address,address,uint256,uint256)"(
      _feeManager: string,
      _feeTo: string,
      _templateManager: string,
      _templateLauncher: string,
      _feeNumerator: BigNumberish,
      _auctionFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    launchTemplate(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "launchTemplate(uint256,bytes)"(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    numberOfAuctions(overrides?: CallOverrides): Promise<BigNumber>;

    "numberOfAuctions()"(overrides?: CallOverrides): Promise<BigNumber>;

    setAuctionFee(
      _auctionFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAuctionFee(uint256)"(
      _auctionFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setFeeManager(
      _feeManager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setFeeManager(address)"(
      _feeManager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setFeeNumerator(
      _feeNumerator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setFeeNumerator(uint256)"(
      _feeNumerator: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setFeeTo(_feeTo: string, overrides?: CallOverrides): Promise<void>;

    "setFeeTo(address)"(
      _feeTo: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setTemplateLauncher(
      _templateLauncher: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setTemplateLauncher(address)"(
      _templateLauncher: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setTemplateManager(
      _templateManager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setTemplateManager(address)"(
      _templateManager: string,
      overrides?: CallOverrides
    ): Promise<void>;

    templateId(overrides?: CallOverrides): Promise<BigNumber>;

    "templateId()"(overrides?: CallOverrides): Promise<BigNumber>;

    templateLauncher(overrides?: CallOverrides): Promise<string>;

    "templateLauncher()"(overrides?: CallOverrides): Promise<string>;

    templateManager(overrides?: CallOverrides): Promise<string>;

    "templateManager()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    FactoryInitialized(
      feeManager: null,
      feeTo: null,
      templateManager: null,
      templateLauncher: null,
      feeNumerator: null,
      auctionFee: null
    ): EventFilter;

    SetAuctionFee(auctionFee: BigNumberish | null): EventFilter;

    SetFeeManager(feeManager: string | null): EventFilter;

    SetFeeNumerator(feeNumerator: BigNumberish | null): EventFilter;

    SetFeeTo(feeTo: string | null): EventFilter;

    SetTemplateLauncher(templateLauncher: string | null): EventFilter;

    SetTemplateManager(templateManager: string | null): EventFilter;

    TemplateLaunched(auction: string | null, templateId: null): EventFilter;
  };

  estimateGas: {
    allAuctions(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allAuctions(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    auctionFee(overrides?: CallOverrides): Promise<BigNumber>;

    "auctionFee()"(overrides?: CallOverrides): Promise<BigNumber>;

    feeDenominator(overrides?: CallOverrides): Promise<BigNumber>;

    "feeDenominator()"(overrides?: CallOverrides): Promise<BigNumber>;

    feeManager(overrides?: CallOverrides): Promise<BigNumber>;

    "feeManager()"(overrides?: CallOverrides): Promise<BigNumber>;

    feeNumerator(overrides?: CallOverrides): Promise<BigNumber>;

    "feeNumerator()"(overrides?: CallOverrides): Promise<BigNumber>;

    feeTo(overrides?: CallOverrides): Promise<BigNumber>;

    "feeTo()"(overrides?: CallOverrides): Promise<BigNumber>;

    initalize(
      _feeManager: string,
      _feeTo: string,
      _templateManager: string,
      _templateLauncher: string,
      _feeNumerator: BigNumberish,
      _auctionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initalize(address,address,address,address,uint256,uint256)"(
      _feeManager: string,
      _feeTo: string,
      _templateManager: string,
      _templateLauncher: string,
      _feeNumerator: BigNumberish,
      _auctionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    launchTemplate(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "launchTemplate(uint256,bytes)"(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    numberOfAuctions(overrides?: CallOverrides): Promise<BigNumber>;

    "numberOfAuctions()"(overrides?: CallOverrides): Promise<BigNumber>;

    setAuctionFee(
      _auctionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setAuctionFee(uint256)"(
      _auctionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setFeeManager(
      _feeManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setFeeManager(address)"(
      _feeManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setFeeNumerator(
      _feeNumerator: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setFeeNumerator(uint256)"(
      _feeNumerator: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setFeeTo(_feeTo: string, overrides?: Overrides): Promise<BigNumber>;

    "setFeeTo(address)"(
      _feeTo: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setTemplateLauncher(
      _templateLauncher: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setTemplateLauncher(address)"(
      _templateLauncher: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setTemplateManager(
      _templateManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setTemplateManager(address)"(
      _templateManager: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    templateId(overrides?: CallOverrides): Promise<BigNumber>;

    "templateId()"(overrides?: CallOverrides): Promise<BigNumber>;

    templateLauncher(overrides?: CallOverrides): Promise<BigNumber>;

    "templateLauncher()"(overrides?: CallOverrides): Promise<BigNumber>;

    templateManager(overrides?: CallOverrides): Promise<BigNumber>;

    "templateManager()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    allAuctions(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "allAuctions(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    auctionFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "auctionFee()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    feeDenominator(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "feeDenominator()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    feeManager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "feeManager()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    feeNumerator(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "feeNumerator()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    feeTo(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "feeTo()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initalize(
      _feeManager: string,
      _feeTo: string,
      _templateManager: string,
      _templateLauncher: string,
      _feeNumerator: BigNumberish,
      _auctionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initalize(address,address,address,address,uint256,uint256)"(
      _feeManager: string,
      _feeTo: string,
      _templateManager: string,
      _templateLauncher: string,
      _feeNumerator: BigNumberish,
      _auctionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    launchTemplate(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "launchTemplate(uint256,bytes)"(
      _templateId: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    numberOfAuctions(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "numberOfAuctions()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setAuctionFee(
      _auctionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setAuctionFee(uint256)"(
      _auctionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setFeeManager(
      _feeManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setFeeManager(address)"(
      _feeManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setFeeNumerator(
      _feeNumerator: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setFeeNumerator(uint256)"(
      _feeNumerator: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setFeeTo(
      _feeTo: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setFeeTo(address)"(
      _feeTo: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setTemplateLauncher(
      _templateLauncher: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setTemplateLauncher(address)"(
      _templateLauncher: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setTemplateManager(
      _templateManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setTemplateManager(address)"(
      _templateManager: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    templateId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "templateId()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    templateLauncher(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "templateLauncher()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    templateManager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "templateManager()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
