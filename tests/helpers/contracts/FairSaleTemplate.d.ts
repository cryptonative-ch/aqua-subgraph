/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface FairSaleTemplateInterface extends ethers.utils.Interface {
  functions: {
    "auction()": FunctionFragment;
    "auctionTemplateId()": FunctionFragment;
    "createSale()": FunctionFragment;
    "init(bytes)": FunctionFragment;
    "mesaFactory()": FunctionFragment;
    "saleLauncher()": FunctionFragment;
    "templateName()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "auction", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "auctionTemplateId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "createSale",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "init", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "mesaFactory",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "saleLauncher",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "templateName",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "auction", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "auctionTemplateId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "createSale", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "init", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "mesaFactory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "saleLauncher",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "templateName",
    data: BytesLike
  ): Result;

  events: {
    "TemplateInitialized(address,address,uint256,uint256,uint96,uint96,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "TemplateInitialized"): EventFragment;
}

export class FairSaleTemplate extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: FairSaleTemplateInterface;

  functions: {
    auction(overrides?: CallOverrides): Promise<[string]>;

    "auction()"(overrides?: CallOverrides): Promise<[string]>;

    auctionTemplateId(overrides?: CallOverrides): Promise<[BigNumber]>;

    "auctionTemplateId()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    createSale(overrides?: PayableOverrides): Promise<ContractTransaction>;

    "createSale()"(overrides?: PayableOverrides): Promise<ContractTransaction>;

    init(_data: BytesLike, overrides?: Overrides): Promise<ContractTransaction>;

    "init(bytes)"(
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    mesaFactory(overrides?: CallOverrides): Promise<[string]>;

    "mesaFactory()"(overrides?: CallOverrides): Promise<[string]>;

    saleLauncher(overrides?: CallOverrides): Promise<[string]>;

    "saleLauncher()"(overrides?: CallOverrides): Promise<[string]>;

    templateName(overrides?: CallOverrides): Promise<[string]>;

    "templateName()"(overrides?: CallOverrides): Promise<[string]>;
  };

  auction(overrides?: CallOverrides): Promise<string>;

  "auction()"(overrides?: CallOverrides): Promise<string>;

  auctionTemplateId(overrides?: CallOverrides): Promise<BigNumber>;

  "auctionTemplateId()"(overrides?: CallOverrides): Promise<BigNumber>;

  createSale(overrides?: PayableOverrides): Promise<ContractTransaction>;

  "createSale()"(overrides?: PayableOverrides): Promise<ContractTransaction>;

  init(_data: BytesLike, overrides?: Overrides): Promise<ContractTransaction>;

  "init(bytes)"(
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  mesaFactory(overrides?: CallOverrides): Promise<string>;

  "mesaFactory()"(overrides?: CallOverrides): Promise<string>;

  saleLauncher(overrides?: CallOverrides): Promise<string>;

  "saleLauncher()"(overrides?: CallOverrides): Promise<string>;

  templateName(overrides?: CallOverrides): Promise<string>;

  "templateName()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    auction(overrides?: CallOverrides): Promise<string>;

    "auction()"(overrides?: CallOverrides): Promise<string>;

    auctionTemplateId(overrides?: CallOverrides): Promise<BigNumber>;

    "auctionTemplateId()"(overrides?: CallOverrides): Promise<BigNumber>;

    createSale(overrides?: CallOverrides): Promise<string>;

    "createSale()"(overrides?: CallOverrides): Promise<string>;

    init(_data: BytesLike, overrides?: CallOverrides): Promise<string>;

    "init(bytes)"(_data: BytesLike, overrides?: CallOverrides): Promise<string>;

    mesaFactory(overrides?: CallOverrides): Promise<string>;

    "mesaFactory()"(overrides?: CallOverrides): Promise<string>;

    saleLauncher(overrides?: CallOverrides): Promise<string>;

    "saleLauncher()"(overrides?: CallOverrides): Promise<string>;

    templateName(overrides?: CallOverrides): Promise<string>;

    "templateName()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    TemplateInitialized(
      tokenOut: null,
      tokenIn: null,
      duration: null,
      tokenOutSupply: null,
      minPrice: null,
      minBuyAmount: null,
      minRaise: null
    ): EventFilter;
  };

  estimateGas: {
    auction(overrides?: CallOverrides): Promise<BigNumber>;

    "auction()"(overrides?: CallOverrides): Promise<BigNumber>;

    auctionTemplateId(overrides?: CallOverrides): Promise<BigNumber>;

    "auctionTemplateId()"(overrides?: CallOverrides): Promise<BigNumber>;

    createSale(overrides?: PayableOverrides): Promise<BigNumber>;

    "createSale()"(overrides?: PayableOverrides): Promise<BigNumber>;

    init(_data: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    "init(bytes)"(_data: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    mesaFactory(overrides?: CallOverrides): Promise<BigNumber>;

    "mesaFactory()"(overrides?: CallOverrides): Promise<BigNumber>;

    saleLauncher(overrides?: CallOverrides): Promise<BigNumber>;

    "saleLauncher()"(overrides?: CallOverrides): Promise<BigNumber>;

    templateName(overrides?: CallOverrides): Promise<BigNumber>;

    "templateName()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    auction(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "auction()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    auctionTemplateId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "auctionTemplateId()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createSale(overrides?: PayableOverrides): Promise<PopulatedTransaction>;

    "createSale()"(overrides?: PayableOverrides): Promise<PopulatedTransaction>;

    init(
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "init(bytes)"(
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    mesaFactory(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "mesaFactory()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    saleLauncher(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "saleLauncher()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    templateName(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "templateName()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
