specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: MesaFactory
    network: {{network}}
    source:
      address: '{{contracts.factory.address}}'
      abi: MesaFactory
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/factory.ts
      abis:
        - name: MesaFactory
          file: ./abis/MesaFactory.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
      entities:
        - MesaFactory
      eventHandlers:
        - event: FactoryInitialized(address,address,address,address,uint256,uint256)
          handler: handleFactoryInitialized
        - event: TemplateLaunched(indexed address,uint256)
          handler: handleTemplateLaunched
  - kind: ethereum/contract
    name: AuctionLauncher
    network: {{network}}
    source:
      address: '{{contracts.auctionLauncher.address}}'
      abi: AuctionLauncher
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/auctionLauncher.ts
      entities:
        - EasyAuction
        - FixedPriceAuction
      abis:
        - name: AuctionLauncher
          file: ./abis/AuctionLauncher.json
        - name: EasyAuction
          file: ./abis/EasyAuction.json
        - name: FixedPriceAuction
          file: ./abis/FixedPriceAuction.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ERC20NameBytes
          file: ./abis/ERC20NameBytes.json
        - name: ERC20SymbolBytes
          file: ./abis/ERC20SymbolBytes.json
      eventHandlers:
        - event: AuctionInitialized(indexed address,uint256,bytes)
          handler: handleAuctionInitialized
        - event: AuctionLaunched(indexed address,uint256)
          handler: handleAuctionLaunched
  - kind: ethereum/contract
    name: TemplateLauncher
    network: {{network}}
    source:
      address: '{{contracts.templateLauncher.address}}'
      abi: TemplateLauncher
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/templateLauncher.ts
      entities:
        - AuctionTemplate
      abis:
        - name: TemplateLauncher
          file: ./abis/TemplateLauncher.json
        - name: AuctionTemplateNameBytes
          file: ./abis/AuctionTemplateNameBytes.json
      eventHandlers:
        - event: TemplateLaunched(indexed address,uint256)
          handler: handleTemplateLaunched
        - event: TemplateAdded(indexed address,uint256)
          handler: handleTemplateAdded
        - event: TemplateRemoved(indexed address,uint256)
          handler: handleTemplateRemoved
        - event: TemplateVerified(indexed address,uint256)
          handler: handleTemplateVerified
  - kind: ethereum/contract
    name: EasyAuction
    network: {{network}}
    source:
      abi: EasyAuction
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/auctions/easyAuction.ts
      entities:
        - EasyAuction
        - AuctionTemplate
      abis:
        - name: EasyAuction
          file: ./abis/EasyAuction.json
      eventHandlers:
        - event: AuctionCleared(uint96,uint96,bytes32)
          handler: handleAuctionCleared
        - event: CancellationOrder(indexed uint64,uint96,uint96)
          handler: handleCancellationOrder
        - event: ClaimedFromOrder(indexed uint64,uint96,uint96)
          handler: handleClaimedFromOrder
        - event: InitializedAuction(indexed address,indexed address,uint256,uint256,uint256,uint96,uint96,uint256,uint256)
          handler: handleInitializedAuction
        - event: NewOrder(indexed uint64,uint96,uint96)
          handler: handleNewOrder
        - event: NewUser(indexed uint64,indexed address)
          handler: handleNewUser
        - event: UserRegistration(indexed address,uint64)
          handler: handleUserRegistration
  - kind: ethereum/contract
    name: FixedPriceAuction
    network: {{network}}
    source:
      abi: FixedPriceAuction
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/auctions/fixedPriceAuction.ts
      entities:
        - FixedPriceAuction
        - AuctionTemplate
      abis:
        - name: FixedPriceAuction
          file: ./abis/FixedPriceAuction.json
      eventHandlers:
        - event: AuctionClosed()
          handler: handleAuctionClosed
        - event: AuctionInitalized(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleAuctionInitalized
        - event: NewPurchase(indexed address,indexed uint256)
          handler: handleNewPurchase
        - event: NewTokenClaim(indexed address,indexed uint256)
          handler: handleNewTokenClaim
        - event: NewTokenRelease(indexed address,indexed uint256)
          handler: handleNewTokenRelease
