/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface AuctionLauncherInterface extends ethers.utils.Interface {
  functions: {
    "addTemplate(address)": FunctionFragment;
    "auctionInfo(address)": FunctionFragment;
    "auctionTemplateId()": FunctionFragment;
    "auctions(uint256)": FunctionFragment;
    "createAuction(uint256,address,uint256,bytes)": FunctionFragment;
    "factory()": FunctionFragment;
    "getDepositAmountWithFees(uint256)": FunctionFragment;
    "getTemplate(uint256)": FunctionFragment;
    "getTemplateId(address)": FunctionFragment;
    "numberOfAuctions()": FunctionFragment;
    "removeTemplate(uint256)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "addTemplate", values: [string]): string;
  encodeFunctionData(functionFragment: "auctionInfo", values: [string]): string;
  encodeFunctionData(
    functionFragment: "auctionTemplateId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "auctions",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createAuction",
    values: [BigNumberish, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "factory", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getDepositAmountWithFees",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTemplate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTemplateId",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "numberOfAuctions",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeTemplate",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "addTemplate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "auctionInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "auctionTemplateId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "auctions", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "createAuction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "factory", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getDepositAmountWithFees",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTemplate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTemplateId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "numberOfAuctions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeTemplate",
    data: BytesLike
  ): Result;

  events: {
    "AuctionInitialized(address,uint256,bytes)": EventFragment;
    "AuctionLaunched(address,uint256)": EventFragment;
    "TemplateAdded(address,uint256)": EventFragment;
    "TemplateRemoved(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AuctionInitialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AuctionLaunched"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TemplateAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TemplateRemoved"): EventFragment;
}

export class AuctionLauncher extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: AuctionLauncherInterface;

  functions: {
    addTemplate(
      _template: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addTemplate(address)"(
      _template: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    auctionInfo(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber] & {
        exists: boolean;
        templateId: BigNumber;
        index: BigNumber;
      }
    >;

    "auctionInfo(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber] & {
        exists: boolean;
        templateId: BigNumber;
        index: BigNumber;
      }
    >;

    auctionTemplateId(overrides?: CallOverrides): Promise<[BigNumber]>;

    "auctionTemplateId()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    auctions(arg0: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    "auctions(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    createAuction(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "createAuction(uint256,address,uint256,bytes)"(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    factory(overrides?: CallOverrides): Promise<[string]>;

    "factory()"(overrides?: CallOverrides): Promise<[string]>;

    getDepositAmountWithFees(
      _tokenSupply: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getDepositAmountWithFees(uint256)"(
      _tokenSupply: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { template: string }>;

    "getTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { template: string }>;

    getTemplateId(
      _template: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getTemplateId(address)"(
      _template: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    numberOfAuctions(overrides?: CallOverrides): Promise<[BigNumber]>;

    "numberOfAuctions()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    removeTemplate(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  addTemplate(
    _template: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addTemplate(address)"(
    _template: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  auctionInfo(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [boolean, BigNumber, BigNumber] & {
      exists: boolean;
      templateId: BigNumber;
      index: BigNumber;
    }
  >;

  "auctionInfo(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [boolean, BigNumber, BigNumber] & {
      exists: boolean;
      templateId: BigNumber;
      index: BigNumber;
    }
  >;

  auctionTemplateId(overrides?: CallOverrides): Promise<BigNumber>;

  "auctionTemplateId()"(overrides?: CallOverrides): Promise<BigNumber>;

  auctions(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "auctions(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  createAuction(
    _templateId: BigNumberish,
    _token: string,
    _tokenSupply: BigNumberish,
    _data: BytesLike,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "createAuction(uint256,address,uint256,bytes)"(
    _templateId: BigNumberish,
    _token: string,
    _tokenSupply: BigNumberish,
    _data: BytesLike,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  factory(overrides?: CallOverrides): Promise<string>;

  "factory()"(overrides?: CallOverrides): Promise<string>;

  getDepositAmountWithFees(
    _tokenSupply: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getDepositAmountWithFees(uint256)"(
    _tokenSupply: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTemplate(
    _templateId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getTemplate(uint256)"(
    _templateId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getTemplateId(
    _template: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getTemplateId(address)"(
    _template: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  numberOfAuctions(overrides?: CallOverrides): Promise<BigNumber>;

  "numberOfAuctions()"(overrides?: CallOverrides): Promise<BigNumber>;

  removeTemplate(
    _templateId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeTemplate(uint256)"(
    _templateId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    addTemplate(
      _template: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "addTemplate(address)"(
      _template: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    auctionInfo(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber] & {
        exists: boolean;
        templateId: BigNumber;
        index: BigNumber;
      }
    >;

    "auctionInfo(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber] & {
        exists: boolean;
        templateId: BigNumber;
        index: BigNumber;
      }
    >;

    auctionTemplateId(overrides?: CallOverrides): Promise<BigNumber>;

    "auctionTemplateId()"(overrides?: CallOverrides): Promise<BigNumber>;

    auctions(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "auctions(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    createAuction(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "createAuction(uint256,address,uint256,bytes)"(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    factory(overrides?: CallOverrides): Promise<string>;

    "factory()"(overrides?: CallOverrides): Promise<string>;

    getDepositAmountWithFees(
      _tokenSupply: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDepositAmountWithFees(uint256)"(
      _tokenSupply: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getTemplateId(
      _template: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTemplateId(address)"(
      _template: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    numberOfAuctions(overrides?: CallOverrides): Promise<BigNumber>;

    "numberOfAuctions()"(overrides?: CallOverrides): Promise<BigNumber>;

    removeTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    AuctionInitialized(
      auction: string | null,
      templateId: null,
      data: null
    ): EventFilter;

    AuctionLaunched(auction: string | null, templateId: null): EventFilter;

    TemplateAdded(template: string | null, templateId: null): EventFilter;

    TemplateRemoved(template: string | null, templateId: null): EventFilter;
  };

  estimateGas: {
    addTemplate(_template: string, overrides?: Overrides): Promise<BigNumber>;

    "addTemplate(address)"(
      _template: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    auctionInfo(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "auctionInfo(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    auctionTemplateId(overrides?: CallOverrides): Promise<BigNumber>;

    "auctionTemplateId()"(overrides?: CallOverrides): Promise<BigNumber>;

    auctions(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "auctions(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createAuction(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "createAuction(uint256,address,uint256,bytes)"(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    factory(overrides?: CallOverrides): Promise<BigNumber>;

    "factory()"(overrides?: CallOverrides): Promise<BigNumber>;

    getDepositAmountWithFees(
      _tokenSupply: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDepositAmountWithFees(uint256)"(
      _tokenSupply: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTemplateId(
      _template: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTemplateId(address)"(
      _template: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    numberOfAuctions(overrides?: CallOverrides): Promise<BigNumber>;

    "numberOfAuctions()"(overrides?: CallOverrides): Promise<BigNumber>;

    removeTemplate(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addTemplate(
      _template: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addTemplate(address)"(
      _template: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    auctionInfo(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "auctionInfo(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    auctionTemplateId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "auctionTemplateId()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    auctions(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "auctions(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createAuction(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "createAuction(uint256,address,uint256,bytes)"(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    factory(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "factory()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getDepositAmountWithFees(
      _tokenSupply: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDepositAmountWithFees(uint256)"(
      _tokenSupply: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTemplateId(
      _template: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTemplateId(address)"(
      _template: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    numberOfAuctions(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "numberOfAuctions()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeTemplate(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
